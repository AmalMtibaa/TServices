@model PuProject.Models.CatFour4

@{
    ViewBag.Title = "Edit";
}

@{ 
    List<SelectListItem> listItems = new List<SelectListItem>();
    foreach (var item in Model.cat2)
    {
        listItems.Add(new SelectListItem
        {
            Text = item.Nom,
            Value = item.Nom
        });
    }
}
<head>
    <link rel="stylesheet" type="text/css" href=@Url.Content("~/Content/css/styleFormulaire.css")>
</head>
<style>
    .a {
        width: 1050px;
        margin: 0 auto;
    }

    body {
        background-color: white;
    }
    .form-control {
        color: #e0e0eb;
        
    }
    input[type=text], input[type=number],.form-control {
        width: 100%;
        padding: 8px 5px;
        background: linear-gradient(#1f2124, #27292c);
        border: 1px solid #222;
        box-shadow: 0 1px 0 rgba(255,255,255,0.1);
        border-radius: 0.3em;
        margin-bottom: 20px;
    }
    label {
        color: white;
    }
</style>

<div class="a">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h1 id="what">Edit</h1>
        <div class="inset">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            <p>
                <label for="email">Gouvernorat</label>
                @Html.EditorFor(model => model.Gouvernorat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gouvernorat, "", new { @class = "text-danger" })
            </p>
            <p>
                <label for="email">Ville</label>
                @Html.EditorFor(model => model.Ville, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ville, "", new { @class = "text-danger" })
            </p>
            <p>
                <label for="email">Adresse</label>
                @Html.EditorFor(model => model.Adresse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adresse, "", new { @class = "text-danger" })
            </p>
            <p>
                <label for="email">Description</label>
                @Html.EditorFor(model => model.Adresse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adresse, "", new { @class = "text-danger" })
            </p>
            <p>
            <p>
                <label for="email">Categorie</label>
                  @Html.DropDownList("Id_Categorie", listItems, new { @class = "form-control" })
            </p>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

            }
        </div>

<script>
    $(document).ready(function () {
        // Handler for .ready() called.
        $('html, body').animate({
            scrollTop: $('#what').offset().top
        }, 'slow');
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




}


